
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://wweihgiklnxetpqcpyyf.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Ind3ZWloZ2lrbG54ZXRwcWNweXlmIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MzU2MzcxMzksImV4cCI6MjA1MTIxMzEzOX0.MGXo-JjykqeUfnD6Zb7yhj6Klz7Wr1JND9WLpffnjUA";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);

// Helper function to delete a client and all related data
export const deleteClientWithRelatedData = async (clientId: string) => {
  if (!clientId) return { error: "No client ID provided" };
  
  try {
    // Delete tasks associated with the client
    const { error: tasksError } = await supabase
      .from('tasks')
      .delete()
      .eq('client_id', clientId);
      
    if (tasksError) {
      console.error('Error deleting associated tasks:', tasksError);
    }
    
    // Delete documents associated with the client
    const { error: documentsError } = await supabase
      .from('documents')
      .delete()
      .eq('client_id', clientId);
      
    if (documentsError) {
      console.error('Error deleting associated documents:', documentsError);
    }
    
    // Delete service relationships
    const { error: servicesError } = await supabase
      .from('client_services')
      .delete()
      .eq('client_id', clientId);
      
    if (servicesError) {
      console.error('Error deleting associated services:', servicesError);
    }
    
    // Finally delete the client
    const { error: clientError } = await supabase
      .from('clients')
      .delete()
      .eq('id', clientId);
      
    if (clientError) {
      return { error: clientError };
    }
    
    return { success: true };
  } catch (error) {
    console.error('Error in deleteClientWithRelatedData:', error);
    return { error };
  }
};

// Extend the supabase client with our custom methods - NOT USED because it causes TypeScript errors
// supabase.deleteClientWithRelatedData = deleteClientWithRelatedData;
